package client;

import java.util.LinkedList;
import java.util.Random;
import client.epuck.*;
import client.epuck.behaviors.PushButtonBehavior;
import tracking.Robot;
import tracking.Vector2d;

/**
 * Main class for the Location Client. It connects to the Location Server,
 * and creates a Controller for the robot, which remotely controls it via Bluetooth.
 * This class also does some extra things, like putting virtual objects in
 * the environment and use that information to provide the robot with
 * virtual sensors.
 *  
 * @author miguelduarte
 */

public class RemoteExperiment extends Thread{
	
	private LocationClient trackerClient;
	private Controller controller;
	private Robot robot;
	private ClientEnvironment environment;
	private PreySensor preySensor;
	private WallButtonSensor wallButtonSensor;
	private LegoConnection lego;
	public int  preysPicked = 0;
	
	private boolean placedAnyPrey = false;
	
	private boolean enableDoorSensors = true;
	private boolean enablePreySensors = true;
	
	private int lastPreyStep;
	private int maxNumberOfPreys = 5;
	private int preySteps = 150;
	private int[][] preyLocation = {{15,85,20,105},{140,200,20,105}};
	private double preyPercentage = 1;
	
	//Sensors
	private static int WALL_IR = 4;		//(0-3)
	private static int PREY = 8;		//(4-11)
	private static int WALL_BUTTON = 2;//(12-13)
	
	//Actuators
	private static int WHEELS = 2;
	private static int PICK_PREY = 1;
	
	public RemoteExperiment(Controller c, Robot r, ClientEnvironment e, WallButtonSensor wallButtonSensor) {
		this.controller = c;
		robot = r;
		environment = e;
		preySensor = new PreySensor(robot);
		this.wallButtonSensor = wallButtonSensor;
		trackerClient = new LocationClient();
		controller.setExperiment(this);
		
		lego = new LegoConnection(this);
		lego.start();
	}
	
	@Override
	public void run() {
		
		try {
			System.out.print("Starting in ");
			for(int i = 6 ; i > 0 ; i--) {
				System.out.print(i+"... ");
				Thread.sleep(1000);
			}
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		System.out.println("GO!");
		
		controller.start();
		
		while(controller.timestep < 1)
			sleep(10);
		
		System.out.println("Successfully started!");
		
		lastPreyStep = 0;
		
		while(true) {
			
			placePreys();
			
			robot.x = trackerClient.x;
			robot.y = trackerClient.y;
			robot.orientation = trackerClient.orientation;
			
			double[] preyVals = preySensor.update(environment.objects);
			double[] wallButtonVals = wallButtonSensor.update();
			double[] virtual = new double[controller.INPUTS];
			
			int currentIndex = WALL_IR; //amount of real sensors (IR)
			if(enablePreySensors) {
				for(int i = 0 ; i < preyVals.length ; i++)
					virtual[currentIndex++] = preyVals[i];
			}
			
			if(enableDoorSensors) {
				for(int i = 0 ; i < wallButtonVals.length ; i++)
					virtual[currentIndex++] = wallButtonVals[i];
			}
			
			controller.setVirtualInputs(virtual);
			sleep(10);
		}
		
	}
	
	private void placePreys() {
		
		int currentStep = controller.getCurrentStep();
		
		if((environment.numberOfPreys() < maxNumberOfPreys && currentStep != lastPreyStep && currentStep % preySteps == 0) || !placedAnyPrey) {
			int index = 0;
			placedAnyPrey = true;
			
			if(new Random().nextDouble() <= preyPercentage)
				index = 1;
			
			int minX = preyLocation[index][0];
			int maxX = preyLocation[index][1];
			int minY = preyLocation[index][2];
			int maxY = preyLocation[index][3];
			
			double x = (new Random()).nextDouble()*(maxX-minX)+minX;
			double y = (new Random()).nextDouble()*(maxY-minY)+minY;
			
			Robot prey = new Robot();
			prey.x = x;
			prey.y = y;
			prey.orientation = 1;
			
			environment.addObject(prey.getPosition());
			
			trackerClient.sendObjectMessage(prey);
			lastPreyStep = currentStep;
		}
	}
	
	private void sleep(int u) {
		try {
			Thread.sleep(u);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

	public void removeObject(Vector2d position, int preyPickRange) {
		LinkedList<Vector2d> objs = environment.removeObject(position, preyPickRange);
		for(Vector2d o : objs) {
			preysPicked++;
			Robot r = new Robot();
			r.x = o.x;
			r.y = o.y;
			r.orientation = 0;
			trackerClient.sendObjectMessage(r);
		}
	}

	public void warnDoors() {
		wallButtonSensor.enabled = !wallButtonSensor.enabled;
	}

	public static void main(String[] args) {
		
		BluetoothHandler bt = new BluetoothHandler();
		Robot r = new Robot();
		WallButtonSensor wallButtonSensor = new WallButtonSensor(r);
		
		CTRNNMultilayer enterCorridor = new CTRNNMultilayer(WALL_IR, 10, WHEELS, new int[]{0,1,2,3}, "Enter Corridor", new double[]{-0.16350360304124611,1.3440018247809455,-1.039252246734168,-4.568601343277295,2.3457104870097036,0.13140972096837777,7.880152605764118,1.0499969920281107,10.0,-10.0,10.0,-1.1342159920924664,8.037512229694112,-7.162269640373575,6.204423158327488,1.2222908495190077,-9.494014235972529,-5.906746281450354,3.3595052655100126,3.2999873698144784,-5.836250124515049,1.019395795847187,1.7313165048045063,3.5866942629281695,3.524026666377264,-0.3486815022910713,-5.418077044320309,6.6138327348968,-1.0952192205526252,0.3248982966554281,6.241148933107169,-3.270623771541062,-10.0,7.376133320997642,0.2569287508993239,-10.0,1.6751997334569875,-3.9572017121828433,-4.844880701732422,1.7721451493088147,5.2003406985123934,0.8998625304119818,0.9757565430808253,0.5231775043022197,-0.25507598907254325,5.523283334524805,4.703056600211234,-0.11875626022363917,-1.4054408134507548,4.329578022851065,1.2939061977523367,-7.5847527668164085,5.16090348007503,-1.039361582395601,1.5200776262637747,-7.008602538215438,2.3506138213816854,8.535857587994789,-4.953633664439478,-7.97206709514078,-6.280328471819507,2.8116237819517553,0.8540749450864874,0.6377157022761331,-0.9021463287892452,-1.6414016992765728,2.4733604889980936,1.3403544052020204,-6.106097126489438,-2.719469720553491,4.530792293819057,-4.2312664709017715,-9.051745577382503,6.95737081171858,-0.27474771872644915,8.503884152961717,5.152854781851863,7.602222789851348,0.5892702010951698,-4.891034453761941,-4.232061806032782,-1.1574284210608805,8.492466897068255,4.001665773103566,-0.8836170172050368,4.278778230591482,-3.094080020149443,8.31913184036815,7.248807518917257,-9.327191905390524,0.21524797912028315,-2.0087233018374366,-6.582670976447802,-4.178654760756065,1.4973106489698553,-5.2243999731685316,0.4378029248719284,7.951298657688316,-6.525900142495583,-3.7386713884458342,-3.881869130846113,-3.566698173382286,-6.143498568279552,0.11057820610931857,-6.870500226236112,-8.444097152154372,-2.3968047586712222,-1.6268036441424973,5.106017296627328,-7.434731921860306,2.1833976726804885,-5.648852978410369,-7.8519605270297905,0.7233112884941371,-3.333307827235116,0.8923787051853145,4.680701207968462,-0.6267026074029871,-1.8325519311362757,5.43485243328652,6.267685184590469,1.595140343226232,-6.466315461910796,-4.0370135146726716,0.5386674774982789,-8.977945566285861,-10.0,-2.0007832079920314,-1.1676490594624958,4.894589113863869,-5.20177493177313,2.266827841056748,-0.5624075529294126,3.2736283024647292,6.17965564384728,-4.974614660822189,-1.7057785805811254,7.7581110905939745,-1.2645705176510071,1.284127251749646,4.6573217332651105,3.5365234239522216,-0.9426833338382751,5.808663222999608,-3.464612198550816,0.5244342981927046,-6.233849007372674,-6.973024770080239,-1.9043380404135843,-0.6726897400628435,6.822886789972441,5.66878439582644,0.9687337994453346,2.112251906655078,-7.233464792647105,-3.8453535513861876,3.406749702655852,-3.000671847806184,-8.43725346611179,4.738957473806845,-5.675347786247717,-3.112086361013657,-6.9865157740706785,-1.3170554224371323,6.087370565541811,6.9328864992824295,-7.4242518165503615,-1.3074639550957574,3.1851614259460526,-1.0647049149111982,4.178758922770476,1.1077917488344013,-4.844643545455244,-0.9459382572537657,-5.860664473407785,-1.8474992509633694,2.2340076510759017,1.4520047304699188,3.6219720238304665,5.0705092782429695,5.907275974996668,-3.249362573120477});		
		CTRNNMultilayer moveToDoor = new CTRNNMultilayer(WALL_IR+WALL_BUTTON, 5, WHEELS, new int[]{0,1,2,3,12,13}, "Move To Door", new double[]{0.9876768863730815,4.031520972825734,2.330940561724967,-4.764693770143617,5.584594947223262,-5.234265099462208,-6.152102505742713,-1.4592118964681202,6.03507387419679,-1.0340995995323472,5.102429906470448,-5.862873903399673,0.7318252861639218,4.336778577702958,1.003961370209208,-0.6916030278250787,0.3789771008777344,-2.8224848922876236,4.136286310800291,0.9090795182665117,3.6209109508885793,9.85569839208649,-1.239632084396652,-8.111929266347296,-2.06961630944874,-1.165108565093054,-4.19955959606776,-1.5881107439767035,2.390452350312835,3.589834936704778,-0.31774338206730324,1.464183306685651,-1.5881292262911146,1.4439339695399012,4.38945770316578,5.026225416030696,-5.956873163444458,3.3445310062995177,-1.170075766755626,-2.5176050268514554,-1.0802703879400275,-2.168900433257769,0.5984818663292388,3.9639315797408576,-2.9226925448140215,-6.907310915680599,-1.265380956744683,-2.3754299147771385,-0.5048712671845683,-0.35201657720831814,-1.12302671395646,-0.7507404084581835,2.355717038990287,0.19968611548018644,-2.0675241079938207,-2.17747091275702,0.7042469818776176,-5.515449435841217,1.9000379627163007,-0.29212753074246134,-3.102236762298076,-1.374863578895036,-0.17832103703445745,-3.2855339657900267,3.2358142926550046,-2.4012554078713073,-0.4189905349707402,-2.6413900197994846,-7.366149833737809,2.769765430943206,2.6379630797488387,2.6982630058562003,0.8996325047153514,2.8786317018844896,-0.19019561088177173,2.204865531747965,-0.5815291720231912});
		CTRNNMultilayer forage = new CTRNNMultilayer(WALL_IR+PREY, 5, WHEELS+PICK_PREY, new int[]{0,1,2,3,4,5,6,7,8,9,10,11}, "Forage", new double[]{-2.1681392101414474,3.6589259801379046,-7.559106736342941,1.2397689962930643,-3.409018547781728,2.15091418013668,2.374825616522082,5.091346638858264,-1.937517369822463,-2.9218417594630086,-3.4616111148443247,2.863458233436669,-5.437256228556235,-3.777813639914815,5.049094310539046,7.177005288274094,2.417374846167168,-6.447662832758133,-3.0496833988763803,-0.04497980091111331,3.8493972764954716,0.5623910113167985,0.8299332741643426,-1.2956244448978775,4.757524746272156,5.522994178024454,2.0562407213269727,6.313657858676796,-1.0317903169033182,-4.563267220408952,-1.5894309577904784,5.698933526809967,1.2237189045767036,0.9212280689790342,7.722839390435516,-0.8420559529280867,2.051217791084346,7.736463203308208,1.650107766077,2.4659257627091526,-2.423174773574951,0.30914791803738906,-1.2917726339011988,-2.0576892296191263,2.597157093282829,5.592562639305572,0.0021598432945899304,-3.7621525760809,0.4297243304230345,-3.834531988856291,-0.7878585382962824,0.923645164729699,2.823074311919191,-2.9409808413034724,-1.345818754711817,-1.4695224047414777,-4.715393311060314,2.8223995779916247,3.912185532779866,-3.3410511246485646,-0.7356240101759035,-0.938759568246003,-1.0649427451331699,-2.623892871524709,2.0989507189281262,-2.871016159347395,-2.5959413652844043,1.6262327953671103,5.487701749035342,-1.2812566111291894,1.8721900778184097,0.8480289831015292,3.4651287989872945,0.6188113748880769,-3.5639400365053033,1.9217737731409794,-0.10529734906988963,-1.9267552598757143,-6.075105370887972,-1.4046744519101306,-10.0,-1.9342271292960822,2.0594370545933773,-7.667649550692052,-0.3698045917374141,0.41978863923524495,2.0614442865793836,-3.034099913264735,2.0016822203847098,0.5175746999928547,-0.06651011629291348,0.10247116718223293,-9.77860682908616,-6.315736759648712,-3.9123154661220156,4.321305443162872,0.31458229200342525,-1.3919143045159974,1.0072715428022998,-2.3851482109280577,-4.809396828594313,1.3104011481246898,-7.091199056810179,0.29061943309205107,-0.31919806782380955,-7.09144985608543,0.7890977713985506,4.244644919163432,-6.5677334059861465,-1.9112789275102346,1.2172999880546571,3.5196738565770693,-2.982153550750327});
		
		PushButtonBehavior pushButton = new PushButtonBehavior(bt,wallButtonSensor,r);
		
		HierarchicalController openDoor = new HierarchicalController(WALL_BUTTON, 5, 2, new int[]{12,13}, "Open Door", new double[]{-3.031517060089546,-5.552607890044527,-3.267914973373829,-2.1967288281629074,4.539089815625277,-1.3841091334074527,-2.439582329489555,-2.746349473878231,3.436187361249675,-2.7559750950386173,-1.2277706421607744,1.0093298173166172,0.22521223890637065,5.4925591556987055,2.9568613731585316,0.9692693403211164,1.595301440227265,3.087307557280844,-2.336841549963361,0.9302692607839456,0.22097486882513134,1.8559913929913485,0.3905015591251664,-1.8311048007612631,-1.550899549936396,-0.5253076421190184,-0.22355265876042146,2.5514437453032532,1.624868959405856,-3.693105040604313,-6.355704050391458,-0.040338605216028056,2.151224276922884,3.540721355952181,-1.2395992231201034,0.12904254815770777,4.53379696831741,-0.2620963728225326,0.4401730356264449,2.8125837594996366,-7.122105414608082,-4.704071638169909,-2.4295113379545117,-2.0882386039610665,1.0340614673132387,0.08999021222866621,0.8280167058715879,2.9190817781882736,3.8133760379626906,0.03601556602446557,-3.7913306518272645,-1.8800717798876074,1.9193571820780375,5.183688356346833,0.8513833170413281,-3.3784639757474513,-0.15617549969266525});
		openDoor.setSubControllers(new RoboticController[]{moveToDoor,pushButton});
//		
		HierarchicalController changeRoom = new HierarchicalController(WALL_IR+WALL_BUTTON, 5, 2, new int[]{0,1,2,3,12,13}, "Change Room", new double[]{-6.872023071097098,-4.1342847256540045,-0.9429198005303888,-0.06408532824713863,3.399614803053394,2.596285958270301,-3.2915142608130052,2.390189788745532,0.48889812457658255,0.9099500966400405,-0.7374339830434393,-6.692888201943122,-0.6114851665433426,-1.612511599199839,9.482412552676838,-1.4133888790419709,-4.908886775171708,4.453670725249364,1.4973460994665926,-1.7366217206603913,-1.8769626683658038,0.43760828812605057,2.3683534924678846,4.717133729060724,-1.7851545063386782,-2.470014742826616,5.37601201295493,3.666196290831735,1.5177844009289483,2.174282877071085,-2.2999488806837234,1.945293771038849,2.235592095959107,2.8408551024250026,0.45496827181807425,2.2320111166661234,1.1475444765762963,-2.131955147536213,2.7552009699030875,-2.8023022710739394,-6.164522279694823,2.3749253467053917,0.21748732379483432,-2.1465294936897314,-3.5512913938678263,-7.142018383452753,-2.06636913704528,2.9471583782562285,-7.341368927506095,3.7967121148954646,-5.291428693141995,-1.9576602558692053,-1.2269700330820505,5.637786967960264,-4.415835731087791,-2.5071870193555927,2.3597314385464854,5.579741907577317,-0.9150264359170761,2.2625179972985743,0.37639989710371285,-1.751927785341494,-6.211701093512483,2.9264827610883692,1.3022207550248635,-0.04586470318515656,1.4814303965984479,1.5744432976769298,-5.057073893370483,-1.9680208232012157,3.4489034645178025,0.6488108350676081,0.15095575472136136,-2.8037217143522803,-0.7967279454618303,-1.7773874046723301,-2.273986368696751});
		changeRoom.setSubControllers(new RoboticController[]{enterCorridor,openDoor});
//		
		HierarchicalController main = new HierarchicalController(WALL_IR+PREY, 5, 2, new int[]{0,1,2,3,4,5,6,7,8,9,10,11}, "Main", new double[]{-1.5951140806590776,-4.200175874697165,-5.316788436974126,-1.1263781083529691,2.2436496249334232,-0.1546980020782881,-5.874338952574517,1.8187349076385948,6.345104603167274,-0.24287914014526146,2.8039249991487782,-2.3513935188587447,0.9626347952086426,-2.0466068638967347,2.6616830578093196,-3.312563116599394,0.30482643504022366,-1.6573741083145548,2.2085843077444425,-0.18014635211053176,1.1969419999837385,-0.9709995293493249,0.21758301569991478,2.5025903064841675,-2.0355634636000435,-4.952894289645202,-3.0135047436841154,4.105605297856268,-0.8163606371193232,-3.95672050461765,-2.0460179268938803,-1.0170404477341413,2.1295786594866,-4.333085040266688,2.166284580338072,2.9750487133015353,0.4166743072399056,1.028426553020561,-0.22929423973864488,2.752308878874725,4.0838128598304335,0.9425911916548817,-5.8191801317490635,-2.7300340463640813,5.253783067816565,0.4057285170616747,2.4159503220080834,-6.230852782676957,1.2279185053990775,-2.8510022741602103,0.640216911442656,-5.22078665303365,-4.205265307749166,-0.17941328225096664,-6.391981991888448,0.5431477510020635,-2.4663215666097025,-2.439357423220641,-4.3784683567413945,-5.359893741878485,3.4193350310167694,-0.7228440384074464,-8.026933019443131,-2.5567380255894268,-3.5979741727325782,2.7908187793104675,-1.1048566815492726,1.1159509408868418,0.544275100637621,-2.587617327615874,2.009144438129652,3.1477014034433437,-0.6739912117791904,-3.103145337342608,-4.280141625894827,-1.7406231468767004,-0.33340438139283085,-6.569992889706471,-4.091961242077991,3.7994286398388604,1.0907565561863,-5.568838712422692,-0.6976244473123148,3.2746538882729004,-2.7092665235118507,-0.31809188858391985,0.05386431830605097,0.8447484883813949,1.0063300348449362,2.381949813597762,0.5617100310299209,2.716188158866453,1.664502363013305,0.7465922817372639,-1.9846047820601997,0.6317012964035587,-2.96437679241418,1.0708513454631883,2.056555422161558,-0.29513548049061994,-0.37671424946409776,-2.7666237030818404,1.9971321399343656,-0.6778773771631579,0.4980967218580492,0.6280090838017135,1.4653715575675632});
		main.setSubControllers(new RoboticController[]{changeRoom,forage});
		
//		Controller controller = new Controller(bt,main,14,4);
		Controller controller = new Controller(bt,main,WALL_IR+PREY+WALL_BUTTON,WHEELS+PICK_PREY);
		
		ClientEnvironment env = new ClientEnvironment();
		
		controller.setRobot(r);
		ControllerFrame frame = new ControllerFrame(controller);
		controller.setFrame(frame);
		
		new RemoteExperiment(controller,r,env,wallButtonSensor).start();
	}
}