package client;

import java.util.LinkedList;
import java.util.Random;
import javax.swing.JFrame;
import tracking.Robot;
import tracking.Vector2d;

public class RemoteExperiment extends Thread{
	
	private TrackerClient trackerClient;
	private Controller controller;
	private Robot robot;
	private ClientEnvironment environment;
	private PreySensor sensor;
	private long lastPreyTime;
	private long preyTime = 15*1000;
	private int maxNumberOfPreys = 10;
	
	public RemoteExperiment(Controller c, Robot r, ClientEnvironment e) {
		this.controller = c;
		robot = r;
		environment = e;
		sensor = new PreySensor(robot);
		trackerClient = new TrackerClient();
		controller.setExperiment(this);
	}
	
	@Override
	public void run() {
		
		System.out.println("Starting experiment");
		
		controller.start();
		
		while(controller.timestep < 1)
			sleep(10);
		
		System.out.println("Successfully started");
		
		lastPreyTime = System.currentTimeMillis();
		
		while(true) {
			
			placePreys();
			
			robot.x = trackerClient.x;
			robot.y = trackerClient.y;
			robot.orientation = trackerClient.orientation;
			
			double[] vals = sensor.update(environment.objects);
			double[] virtual = new double[Controller.INPUTS];
			
			for(int i = 4 ; i < virtual.length ; i++)
				virtual[i] = vals[i-4];
			
			controller.setVirtualInputs(virtual);
			
			sleep(10);
		}
		
	}
	
	private void placePreys() {
		if(System.currentTimeMillis() - lastPreyTime > preyTime && environment.numberOfPreys() < maxNumberOfPreys) {
			
			int minX = 15;
			int maxX = 95;
			int minY = 50;
			int maxY = 120;
			
			double x = (new Random()).nextDouble()*(maxX-minX)+minX;
			double y = (new Random()).nextDouble()*(maxY-minY)+minY;
			
			Robot prey = new Robot();
			prey.x = x;
			prey.y = y;
			prey.orientation = 1;
			
			environment.addObject(prey.getPosition());
			
			trackerClient.sendObjectMessage(prey);
			lastPreyTime = System.currentTimeMillis();
		}
	}
	
	private void sleep(int u) {
		try {
			Thread.sleep(u);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

	public static void main(String[] args) {
		CTRNNMultilayer ann = new CTRNNMultilayer(12, 10, 3, new int[]{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15}, new double[]{-3.1054225029367086,-6.054063536703551,-1.503620497651381,-3.4000979630970276,-1.9114633830334142,3.4736622600706903,-1.5308427710318018,1.3878155837225434,-4.471401402850091,-6.143452642970041,2.65641893113957,1.985760109921485,-2.612355053831453,-1.1674844547582608,-4.899433203291161,-0.4581382548413404,8.007386886448637,1.613539083925069,-3.7672829442034605,-1.2283316616548126,-4.350830684674568,-1.6105888775074675,1.0188905511501831,-1.1432902509110319,7.60914064610008,2.86310848070661,-2.5614613418281458,4.156297261713069,-5.272368758073819,-5.0997447853949325,-1.5992842501378028,2.378707272322946,8.698785837925259,-2.459269443059197,0.20651925478645783,-2.253458704131575,3.3809099914581187,-2.4474426811686953,-4.104773887591124,-5.394761824339359,1.1205670504793526,-3.005462074783199,-4.699646271477246,2.6565873880059487,0.024513599816243764,0.5498143611449371,4.152054385589661,-5.43870288559018,-2.425353600881061,-3.656526441171988,1.6392890195277598,-2.6531433985880892,3.478416346380645,2.6094080273063622,2.6121165871985936,-3.2735783559599114,0.33265544212654485,2.9495640224674036,-8.03555386897107,2.3761137505806293,-5.312578619755473,-1.7657289824899671,-3.029509490452273,-10.0,-4.831744177052745,-1.8036531629239687,-5.948465695623173,-1.3150395506498642,-6.043790264149365,-8.99967645239117,-9.484418153334964,-1.262446475661551,-1.8832614200824214,-3.128931593567634,0.1793214484210921,-0.36498789294330225,4.017336718386874,-1.4412863182653202,-5.065260280080808,-5.364986136052567,5.258959587596763,-1.9844957935689476,4.885756662476892,-2.447954647223911,-0.276015822362443,3.4214761346221616,-4.695510838211017,-2.28524405408161,-4.022902038595682,0.5461983851601402,-1.4778832422002866,4.534810447619437,-0.8911267725806582,0.35063697677715977,-0.8763258027081566,-6.298558640162648,0.9294957713288665,-4.142004766069514,-8.890107291505615,0.6711106687165986,-1.8910861551212355,-3.398088846217905,-6.082694199802072,-10.0,-0.49889085400919364,1.3117256153747503,-1.3121864964431826,-2.334879913280284,-0.27969109277418663,7.247467540467381,-2.835656224526044,-2.565179189380488,1.0072518421783372,1.62574919793989,3.381866170763308,-0.8958112327653811,-0.22655737001736387,-3.0336609953521054,-5.831024672765869,1.4321769766000314,-5.535643171805824,-2.932403730847785,-3.7298653676949884,-3.6565305680087126,5.991400630765124,1.064356214465238,-4.198018125915845,0.10453160959988561,-2.287610782717282,2.793151601099057,1.165472080166053,-4.12078617366096,-5.529040061997593,0.42791296185562167,-0.2939822233886681,0.07221041335120337,-2.6913271648315185,-7.597804200152996,1.041466254207073,0.011244553645181732,-6.144076955325385,3.366606679135238,3.2140568632465456,4.333335060271066,1.104395536882603,-1.4688100291190471,-3.3329317148713478,-0.11100226720454132,3.4911361559430607,-2.1679614940766547,0.5787549223253821,-2.476636022708678,-3.421449692566317,4.538767849106448,-2.3556470168564374,-1.7381051242495382,-1.938897181428683,4.194838007624696,-6.280175741489081,-1.6515581924410565,-6.088207157902046,-6.3849166853407695,-3.3828664934422727,0.005792573042132765,-1.7181916772332069,-1.2721877375210617,-3.364792303978131,4.235827912825515,-10.0,4.520700506474721,-0.42634750938496124,-2.1069188846425457,1.5442473200455549,6.669677268231596,7.171199533399057,2.683048940638648,1.9696284998090268,-3.7668879790896286,-8.12095103869296,5.315836575973758,-3.359611424215905,-2.7433904112796665,4.195116626258098,-3.012748784667329,-3.106670390553754,-2.2436887126035012,0.8044633610765912,-5.321509923891449,-7.9429120302863,0.3778030896982709,-3.454110454182858,-6.366019366263519,-6.950250565214626,6.816506611648835,2.0827953519966247,5.062692619068782,-2.9578504385029145,-6.620844925649476,0.6194451514047954,-2.528568064525289,-0.6529628368940563,-2.3508544506282245,-0.15002486489718503,-2.001598063256957,-7.213724608444424,-6.293250678264205,-0.21826429260216984,0.36593724495352653,-1.0084650386163294,-5.200678144385446,0.16532431830691985,0.2708340823524659,0.8356821422175872,0.00921134861078965,6.874688867047702,0.5289836736961364,-4.72534041383151,2.3853894804019085,-5.9015286520535115,-4.954269472673141,-0.6175757649622445,-4.287159849423427,0.11996384000588364,-0.8405534732625713,-6.042696400355337,-1.8023186481167763,-3.2243005855947207,-4.721730884861959,-4.114647016129926,-4.811647945929428,-3.363673581925819,0.3285110746683256,-7.774392101587205,-4.586464894614856,1.9082039605476315,-1.5714949125430882,-10.0,1.997009065381306,-5.717952282761008,1.1530738254419788,-0.5028347707416748,-6.691862732908203,-3.2339863486014533,0.2759816683254067,-2.538025845557241,5.261480822831158,-9.441328027118136,-0.20418509017020825,-1.923472192419288,5.647106836420523,-1.2327885913590828,-10.0,-4.604221672042517,-0.9114920289517081,-0.29007244320126446,1.4955255991354286,-2.888917650109268,2.606387139892394,0.683980783807927,1.4942159453720563,-2.932714077525144,-1.8006404387958332,-1.8723203606753482,-3.2841655791741085,-2.054308946918992,-9.920027925917301,-1.7005325786912406,1.4880403224845629,-0.7943221555891118,-2.426015198393867,-1.0785352248161701,3.293084676415672,0.5851170809122188});
		Controller controller = new Controller(ann,12,3);
		ClientEnvironment env = new ClientEnvironment();
		Robot r = new Robot();
		controller.setRobot(r);
		ControllerFrame frame = new ControllerFrame(controller);
		controller.setFrame(frame);
		
		new RemoteExperiment(controller,r,env).start();
	}

	public void removeObject(Vector2d position, int preyPickRange) {
		LinkedList<Vector2d> objs = environment.removeObject(position, preyPickRange);
		for(Vector2d o : objs) {
			Robot r = new Robot();
			r.x = o.x;
			r.y = o.y;
			r.orientation = 0;
			trackerClient.sendObjectMessage(r);
		}
	}
}
